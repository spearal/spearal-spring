/**
 * == @Spearal ==>
 * 
 * Copyright (C) 2014 Franck WOLFF & William DRAI (http://www.spearal.io)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'org.spearal'
version =  spearalVersion
description = 'Spearal Spring'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
	deployerJars
}

dependencies {
	
	compile 'org.javassist:javassist:3.18.2-GA'
	compile 'org.springframework:spring-webmvc:4.1.0.RELEASE'
	compile 'org.springframework:spring-orm:4.1.0.RELEASE'
	compile 'org.jboss.spec.javax.servlet:jboss-servlet-api_3.1_spec:1.0.0.Final'
	compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final'
	compile "org.spearal:spearal-java:${spearalVersion}"
	compile "org.spearal:spearal-jpa2:${spearalVersion}"
	
	testCompile 'junit:junit:4.11'
	
	testRuntime 'com.h2database:h2:1.4.179'
	
	deployerJars 'org.apache.maven.wagon:wagon-http:2.2'
}

compileJava {
    sourceCompatibility=1.6
    targetCompatibility=1.6
}

jar {
    baseName = 'spearal-spring'
    version = spearalVersion
}

javadoc {
	title "${project.description} API Documentation"
	
	configure(options) {
		version = true
		author = true
		use = true
		windowTitle = "${project.description} API Documentation"
		docTitle = "${project.description} API Documentation ${spearalVersion}"
	}
}

task sourcesJar(type: Jar, dependsOn: 'classes') {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: 'javadoc') {
	classifier = 'javadoc'
	from javadoc.destinationDir
}
	
artifacts {
	archives sourcesJar
	archives javadocJar
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

signing {
	required {
		gradle.taskGraph.hasTask('uploadArchives')
	}
	sign configurations.archives
}

install {
	repositories {
		mavenInstaller {
			// Generated dependencies are not suitable for maven pom, remove everything for now
			pom.whenConfigured { pom -> pom.dependencies.clear() }
		}
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment {
				MavenDeployment deployment -> signing.signPom(deployment)
			}
			
			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeOssUserName, password: sonatypeOssPassword)
			}
			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeOssUserName, password: sonatypeOssPassword)
			}
			
			pom.project {
				name 'Spearal JAX-RS'
				description project.description
				url 'http://www.spearal.io'
				
				scm {
					url 'scm:git@github.com:spearal/spearal-jaxrs.git'
					connection 'scm:git@github.com:spearal/spearal-jaxrs.git'
					developerConnection 'scm:git@github.com:spearal/spearal-jaxrs.git'
				}
				
				licenses {
					license {
						name 'Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0'
						distribution 'repo'
					}
				}
				
				developers {
					developer {
						id 'fwolff'
						name 'Franck Wolff'
					}
					developer {
						id 'wdrai'
						name 'William Drai'
					}
				}
			}
			
			// Generated dependencies are not suitable for maven pom, remove everything for now
			pom.whenConfigured { pom -> pom.dependencies.clear() }
		}
	}
}
